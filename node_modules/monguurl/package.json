{
  "name": "monguurl",
  "version": "0.1.0",
  "description": "Automatically generate a unique and url-friendly alias/slug and store it in Mongoose",
  "main": "lib/monguurl.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/ahultgren/monguurl.git"
  },
  "keywords": [
    "url",
    "alias",
    "mongoose",
    "slug",
    "unique"
  ],
  "author": {
    "name": "Andreas Hultgren",
    "url": "http://andreashultgren.se"
  },
  "license": "MIT",
  "dependencies": {
    "urlify": "~0.2.2"
  },
  "devDependencies": {
    "mongoose": "~3.6.9",
    "chai": "~1.6.0",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.4.3"
  },
  "directories": {
    "lib": "./lib"
  },
  "readme": "# Monguurl\n\nAutomatically generate a unique and url-friendly alias/slug and store it in Mongoose. For example for posts it's common to generate an alias/slug from the title.\n\n## Example\n\nDefine your model like this:\n\n```javascript\nvar mongoose = require('mongoose'),\n    monguurl = require('monguurl');\n\nPost = new mongoose.schema({\n  title: { type: String },\n  slug: { type: string, index: { unique: true } }\n});\n\nPost.plugin(monguurl({\n  source: 'title',\n  target: 'slug'\n}));\n\nmongoose.model('Post', Post);\n```\n\nAnd then if you for example create a new document like this:\n\n```javascript\nmongoose.model('Post').create({\n  title: 'This is so Äwesome!'\n});\n```\n\nThe slug will be automatically generated and stored in the database:\n\n```json\n{\n  \"_id\": \"09876543...\",\n  \"title\": \"This is so Äwesome!\",\n  \"slug\": \"this-is-so-awesome\"\n}\n```\n\nCreate another identical document and it will be stored like this:\n\n```json\n{\n  \"_id\": \"09876543...\",\n  \"title\": \"This is so Äwesome!\",\n  \"slug\": \"this-is-so-awesome-2\"\n}\n```\n\nThe ending number will increase to \"-100\", then it will be \"-100-2\". This is to avoid ruining intentional numbers such as \"It's over 9000\" or \"A day in 2013\". It's unlikely enough that either such a title is repeated or that the same title is used more than a hundred times anyway.\n\nAlso note that theoretically this plugin can be used without a source/title, if such behavior is desired. Just set the target field when creating the document and any source will be ignored.\n\n**Update:** It's now also possible to set a max-length for aliases. Setting `monguurl({ length: 40 })` will cut the alias approximately at the space (dash) closest before the limit. If there's no space/dash, the string will be cut off at the limit anyway. The final length might be up to 6 bytes longer to accomodate for appended numbers. The default length is 0, which is unlimited.\n\n\n## Installation\n\n* `npm install monguurl --save`\n\n\n## Documentation\n\n* __monguurl(options)__  \n  Creates the mongoose plugin.\n  * options.source (string) Path to the field which to generate the alias from.  \n    Default: 'title'\n  * options.target (string) path to the field where the alias should be stored.  \n    Default: 'alias'\n* __urlProof(alias)__  \n  Method used to make a string url-friendly. If you want a different method, just replace it.\n",
  "readmeFilename": "README.md",
  "_id": "monguurl@0.1.0",
  "_from": "monguurl@0.1.x"
}
